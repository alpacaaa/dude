---
- hosts: all
  vars_files:
  - "{{ dude_env }}.yml"

  pre_tasks:
  - name: Create Dude user account
    user: name=dude groups="sudo" shell=/bin/bash
    sudo: yes

  - name: Add public key
    authorized_key: user=dude key="{{ lookup('file', '~/.ssh/id_rsa.pub') }}"
    sudo: yes

  - name: Custom rc.local
    copy: src=files/rc.local dest=/etc/rc.local
    sudo: yes

  - name: Node is installed
    stat: path=/usr/local/nodejs/{{ dude.node_version }}/bin
    register: node_is_installed

  - name: Dude is configured
    stat: path=/home/dude/www/shared/server/dude-config.json
    register: dude_is_configured

  roles:
  - role: roles/bennojoy.mysql
    mysql_root_db_pass: "{{ dude.mysql_root_db_pass }}"
    mysql_db:
    - name: "{{ dude.mysql_db }}"
    mysql_users:
    - name: "{{ dude.mysql_user }}"
      pass: "{{ dude.mysql_user_pass }}"
      priv: "{{ dude.mysql_db }}.*:ALL"
    sudo: yes

  - role: roles/ANXS.nodejs
    nodejs_version: "{{ dude.node_version }}"
    nodejs_install_method: "source"
    sudo: yes
    when: not node_is_installed.stat.exists

  tasks:
  - name: Install packages
    npm: name={{ item }} global=yes production=yes executable={{ dude.node_dir }}/npm
    with_items:
      - coffee-script
      - pm2
    sudo: yes

  - name: Install packages from apt
    apt: pkg={{item}} state=installed
    with_items:
      - git
      - percona-xtrabackup

  - name: Create webapp environment
    file: path=/home/dude/www state=directory
    file: path=/home/dude/www/shared state=directory
    file: path=/home/dude/www/shared/logs state=directory
    file: path=/home/dude/www/shared/server state=directory
    sudo_user: dude
    sudo: yes

  - name: Create dude configuration file for db
    template:
      src: files/datasources.json.tpl
      dest: "/home/dude/www/shared/server/datasources.{{ dude_env }}.json"
      owner: dude
      group: dude
      mode: 0600
    sudo: yes

  - name: Setup Dude configuration (optional)
    template:
      src: files/dude-config.json.tpl
      dest: "/home/dude/www/shared/server/dude-config.json"
      owner: dude
      group: dude
      mode: 0600
    when: dude.github_client_id is defined and not dude_is_configured.stat.exists
    sudo: yes

  - name: Create backup folders
    file: path=/home/dude/backup state=directory
    file: path=/home/dude/backup/mysql state=directory
    sudo_user: dude
    sudo: yes

  - name: Create mysql backup script
    template:
      src: files/mysql_backup.tpl
      dest: "/home/dude/mysql_backup"
      owner: root
      group: root
      mode: 0700
    sudo: yes

  - name: Setup mysql backup cron
    cron:
      name: mysql backup
      job: /home/dude/mysql_backup
      special_time: daily
